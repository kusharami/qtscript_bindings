[network]
name = QtNetwork
prefix = QtNetwork

cpp_namespace = 
classes = Q.*
base_classes = QObject
skip_classes = ((?!^(QNetworkRequest|QNetworkReply|QNetworkAccessManager)$).)*
target_namespace = qt
remove_prefix = Q

extra_arguments = %(default_arguments)s

search_path = %(qtnetwork_include)s
headers = %(qtnetwork_include)s/QtNetwork
replace_headers = QtNetwork@<QtNetwork/QtNetwork>
ignore_metatypes = QNetworkRequest

hpp_headers = QtScriptQObject.h qtscript_core.hpp
cpp_headers = QtScriptUtils.h QtScriptQByteArray.h

rename_functions = *@%(default_operators)s;QNetworkAccessManager@post(const QNetworkRequest&,const QByteArray&)QNetworkReply*@postBytes#put(const QNetworkRequest&,const QByteArray&)QNetworkReply*@putBytes#cookieJar@0#setCookieJar@0#cache@0#setCache@0#strictTransportSecurityHosts@0#addStrictTransportSecurityHosts@0;QNetworkReply@rawHeaderPairs@0
abstract_classes = 
rename_classes =
field = 
# classes for which there will be no "parent" lookup
classes_have_no_parents =

# base classes which will be skipped when their sub-classes found them.
base_classes_to_skip =

# Determining whether to use script object(js object) to control the lifecycle of native(cpp) object or the other way around. Supported values are 'yes' or 'no'.
script_control_cpp = yes
